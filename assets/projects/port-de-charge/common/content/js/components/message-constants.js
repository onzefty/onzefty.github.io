Object.defineProperty(window, 'MessagesConstants', {
    get: function () {
        return {
            MENU_SHOW: 'Menu.show',
            MENU_HIDE: 'Menu.hide',
            MENU_QUIT: 'Menu.quit',
            MENU_UPDATE: 'Menu.update',
            MENU_TOGGLE: 'Menu.toggle',
            MENU_HIDE_MISC_BUTTONS: 'Menu.miscellaneous.buttons.hide',
            MENU_SHOW_MISC_BUTTONS: 'Menu.miscellaneous.buttons.show',
            MENU_ADD_UPPER: 'Menu.add.upper',
            MENU_REMOVE_UPPER: 'Menu.remove.upper',
            MENU_SHOW_MISC_UPDATE: 'Menu.update',
            MENU_SEND_VOLUME: 'Menu.volume.send',
            MENU_BLUR: 'Menu.blur',
            CONTENT_FOCUS: 'Content.focus',
            CONTENT_NEXT: 'Content.navigation.next',
            CONTENT_EVAL_PAUSE: 'Content.evaluation.pause',
            CONTENT_EVAL_CLOSE: 'Content.evaluation.close',
            CONTENT_EVAL_VALIDATION: 'Content.evaluation.validation',
            CONTENT_VOLUME: 'Content.volume',
            CONTENT_PREVIOUS: 'Content.navigation.previous',
            CONTENT_UPDATE: 'Content.update',
            CONTENT_CHANGE: 'Content.change',
            CONTENT_SOUND_CLICK: 'Content.sound.click',
            CONTENT_SOUND_OPEN: 'Content.sound.open',
            CONTENT_SOUND_CLOSE: 'Content.sound.close',
            FOOTER_SHOW: 'Footer.show',
            FOOTER_HIDE: 'Footer.hide',
            FOOTER_ON: 'Footer.on',
            FOOTER_OFF: 'Footer.off',
            FOOTER_UPDATE: 'Footer.update',
            FOOTER_CONTENT_CHANGED: 'Footer.content.changed',
            FOOTER_NEXT_CHANGED: 'Footer.next.changed',
            FOOTER_PREV_CHANGED: 'Footer.prev.changed',
            FOOTER_BLUR: 'Footer.blur',
            FOOTER_EVAL_CLOSE: 'Footer.eval.close',
            FOOTER_EVAL_PAUSE: 'Footer.eval.pause',
            FOOTER_EVAL_VALIDATION: 'Footer.eval.validation',
            HEADER_UPDATE: 'Header.update',
            NAVIGATION_EVENT: 'navigation-event',
        };
    },
});
